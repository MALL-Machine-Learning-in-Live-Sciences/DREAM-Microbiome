# Plot features
# =====
res = list()
for (feat in seq_along(features)) {
bicho = features[feat]
toPlot_noterm = list()
for (i in names(v.nt)) {
participant = i
specimens = meta[which(meta$participant_id == participant),]$specimen
abundance = tax[specimens,bicho]
weeks = meta[which(meta$participant_id == participant),]$collect_wk
toPlot_noterm[[i]] = data.frame(
id = participant,
visit = specimens,
abundance = abundance,
weeks = as.numeric(weeks),
bicho = bicho,
features = names(bicho),
term = 'No-term'
)
# print(plot(weeks,
#            abundance,
#            xlim = c(5,40),
#            ylim = c(0, 0.55),
#            title(main = paste(bicho, participant, 'no term'))))
}
toPlot_noterm = data.table::rbindlist(toPlot_noterm)
toPlot_term = list()
for (i in names(v.t)) {
participant = i
specimens = meta[which(meta$participant_id == participant),]$specimen
abundance = tax[specimens,bicho]
weeks = meta[which(meta$participant_id == participant),]$collect_wk
toPlot_term[[i]] = data.frame(
id = participant,
visit = specimens,
abundance = abundance,
weeks = as.numeric(weeks),
bicho = bicho,
features = names(bicho),
term = 'Term'
)
# print(plot(weeks,
#            abundance,
#            xlim = c(5,40),
#            ylim = c(0, 0.77),
#            title(main = paste(bicho, participant, 'term'))))
}
toPlot_term = data.table::rbindlist(toPlot_term)
toPlot = rbind.data.frame(toPlot_term, toPlot_noterm)
head(toPlot)
res[[feat]] = toPlot
}
res = data.table::rbindlist(res)
# Plotting
require(ggplot2)
ggplot(data = res,
aes(x = weeks,
y = abundance,
group = interaction(as.factor(id), as.factor(term)),
color = as.factor(term))) +
facet_wrap(bicho ~ features) +
geom_line() +
xlim(10,32) +
theme(legend.title = element_blank())
intersect(names(subsets$C[which(coab == 2)]),
names(subsets$A[which(coab == 2)]))
coabA = coAbundances(subsets$A)
coabC = coAbundances(subsets$C)
intersect(names(subsets$C[which(coabC == 2)]),
names(subsets$A[which(coabA == 2)]))
names(subsets$C[which(coabC == 2)])
names(subsets$A[which(coabA == 2)])
# tax = clusters
features = names(subsets$C[which(coabC == 2)])
names(features) = rep('Cohort C', length(features))
tax = read.csv('../../extdata/taxonomy/taxonomy_relabd.genus.csv',
header = T, row.names = 1)
# Plot features
# =====
res = list()
for (feat in seq_along(features)) {
bicho = features[feat]
toPlot_noterm = list()
for (i in names(v.nt)) {
participant = i
specimens = meta[which(meta$participant_id == participant),]$specimen
abundance = tax[specimens,bicho]
weeks = meta[which(meta$participant_id == participant),]$collect_wk
toPlot_noterm[[i]] = data.frame(
id = participant,
visit = specimens,
abundance = abundance,
weeks = as.numeric(weeks),
bicho = bicho,
features = names(bicho),
term = 'No-term'
)
# print(plot(weeks,
#            abundance,
#            xlim = c(5,40),
#            ylim = c(0, 0.55),
#            title(main = paste(bicho, participant, 'no term'))))
}
toPlot_noterm = data.table::rbindlist(toPlot_noterm)
toPlot_term = list()
for (i in names(v.t)) {
participant = i
specimens = meta[which(meta$participant_id == participant),]$specimen
abundance = tax[specimens,bicho]
weeks = meta[which(meta$participant_id == participant),]$collect_wk
toPlot_term[[i]] = data.frame(
id = participant,
visit = specimens,
abundance = abundance,
weeks = as.numeric(weeks),
bicho = bicho,
features = names(bicho),
term = 'Term'
)
# print(plot(weeks,
#            abundance,
#            xlim = c(5,40),
#            ylim = c(0, 0.77),
#            title(main = paste(bicho, participant, 'term'))))
}
toPlot_term = data.table::rbindlist(toPlot_term)
toPlot = rbind.data.frame(toPlot_term, toPlot_noterm)
head(toPlot)
res[[feat]] = toPlot
}
res = data.table::rbindlist(res)
# Plotting
require(ggplot2)
ggplot(data = res,
aes(x = weeks,
y = abundance,
group = interaction(as.factor(id), as.factor(term)),
color = as.factor(term))) +
facet_wrap(bicho ~ features) +
geom_line() +
xlim(10,32) +
theme(legend.title = element_blank())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
alpha = read.csv('../../extdata/alpha_diversity/alpha_diversity.csv', header = T, row.names = T)
alpha = read.csv('../../extdata/alpha_diversity/alpha_diversity.csv', header = T)
meta = read.csv('../../extdata/metadata/metadata.csv', header = T)
head(alpha)
rownames(alpha) = alpha$specimen; alpha[,-1]
alpha = read.csv('../../extdata/alpha_diversity/alpha_diversity.csv', header = T)
rownames(alpha) = alpha$specimen; alpha = alpha[,-1]
meta = read.csv('../../extdata/metadata/metadata.csv', header = T)
tax = alpha
features = names(alpha)
names(features) = rep('Alpha Diversity', length(features))
# Plot features
# =====
res = list()
for (feat in seq_along(features)) {
bicho = features[feat]
toPlot_noterm = list()
for (i in names(v.nt)) {
participant = i
specimens = meta[which(meta$participant_id == participant),]$specimen
abundance = tax[specimens,bicho]
weeks = meta[which(meta$participant_id == participant),]$collect_wk
toPlot_noterm[[i]] = data.frame(
id = participant,
visit = specimens,
abundance = abundance,
weeks = as.numeric(weeks),
bicho = bicho,
features = names(bicho),
term = 'No-term'
)
# print(plot(weeks,
#            abundance,
#            xlim = c(5,40),
#            ylim = c(0, 0.55),
#            title(main = paste(bicho, participant, 'no term'))))
}
toPlot_noterm = data.table::rbindlist(toPlot_noterm)
toPlot_term = list()
for (i in names(v.t)) {
participant = i
specimens = meta[which(meta$participant_id == participant),]$specimen
abundance = tax[specimens,bicho]
weeks = meta[which(meta$participant_id == participant),]$collect_wk
toPlot_term[[i]] = data.frame(
id = participant,
visit = specimens,
abundance = abundance,
weeks = as.numeric(weeks),
bicho = bicho,
features = names(bicho),
term = 'Term'
)
# print(plot(weeks,
#            abundance,
#            xlim = c(5,40),
#            ylim = c(0, 0.77),
#            title(main = paste(bicho, participant, 'term'))))
}
toPlot_term = data.table::rbindlist(toPlot_term)
toPlot = rbind.data.frame(toPlot_term, toPlot_noterm)
head(toPlot)
res[[feat]] = toPlot
}
v.nt = readRDS('../../01_preprocess_data/data/visits_of_noterms.rds')
v.t = readRDS('../../01_preprocess_data/data/visits_of_terms.rds')
# Plot features
# =====
res = list()
for (feat in seq_along(features)) {
bicho = features[feat]
toPlot_noterm = list()
for (i in names(v.nt)) {
participant = i
specimens = meta[which(meta$participant_id == participant),]$specimen
abundance = tax[specimens,bicho]
weeks = meta[which(meta$participant_id == participant),]$collect_wk
toPlot_noterm[[i]] = data.frame(
id = participant,
visit = specimens,
abundance = abundance,
weeks = as.numeric(weeks),
bicho = bicho,
features = names(bicho),
term = 'No-term'
)
# print(plot(weeks,
#            abundance,
#            xlim = c(5,40),
#            ylim = c(0, 0.55),
#            title(main = paste(bicho, participant, 'no term'))))
}
toPlot_noterm = data.table::rbindlist(toPlot_noterm)
toPlot_term = list()
for (i in names(v.t)) {
participant = i
specimens = meta[which(meta$participant_id == participant),]$specimen
abundance = tax[specimens,bicho]
weeks = meta[which(meta$participant_id == participant),]$collect_wk
toPlot_term[[i]] = data.frame(
id = participant,
visit = specimens,
abundance = abundance,
weeks = as.numeric(weeks),
bicho = bicho,
features = names(bicho),
term = 'Term'
)
# print(plot(weeks,
#            abundance,
#            xlim = c(5,40),
#            ylim = c(0, 0.77),
#            title(main = paste(bicho, participant, 'term'))))
}
toPlot_term = data.table::rbindlist(toPlot_term)
toPlot = rbind.data.frame(toPlot_term, toPlot_noterm)
head(toPlot)
res[[feat]] = toPlot
}
res = data.table::rbindlist(res)
# Plotting
require(ggplot2)
ggplot(data = res,
aes(x = weeks,
y = abundance,
group = interaction(as.factor(id), as.factor(term)),
color = as.factor(term))) +
facet_wrap(bicho ~ features) +
geom_line() +
xlim(10,32) +
theme(legend.title = element_blank())
ggplot(data = res,
aes(x = weeks,
y = abundance,
group = interaction(as.factor(id), as.factor(term)),
color = as.factor(term))) +
facet_wrap(bicho ~ features, scales = 'y_free') +
geom_line() +
xlim(10,32) +
theme(legend.title = element_blank())
ggplot(data = res,
aes(x = weeks,
y = abundance,
group = interaction(as.factor(id), as.factor(term)),
color = as.factor(term))) +
facet_wrap(bicho ~ features, scales = 'free_y') +
geom_line() +
xlim(10,32) +
theme(legend.title = element_blank())
v.nt
which(meta$collect_wk < 32)
alpha$id = meta$participant_id
alpha = alpha[which(meta$collect_wk < 32),]
require(ggplot2)
require(ggpubr)
alpha = read.csv('../../extdata/alpha_diversity/alpha_diversity.csv', header = T)
rownames(alpha) = alpha$specimen; alpha = alpha[,-1]
meta = read.csv('../../extdata/metadata/metadata.csv', header = T)
alpha$id = meta$participant_id
alpha$collect_wk = meta$collect_wk
alpha = alpha[which(meta$collect_wk < 32),]
alpha = alpha[which(meta$collect_wk < 28),]
ggboxplot(alpha, x = 'collect_wk', y = 'bwpd')
class(alpha$collect_wk)
class(alpha$bwpd)
alpha$term = meta$was_term
alpha = read.csv('../../extdata/alpha_diversity/alpha_diversity.csv', header = T)
rownames(alpha) = alpha$specimen; alpha = alpha[,-1]
meta = read.csv('../../extdata/metadata/metadata.csv', header = T)
alpha$id = meta$participant_id
alpha$term = meta$was_term
alpha = alpha[which(meta$collect_wk < 28),]
ggboxplot(alpha, x = 'term', y = 'bwpd')
ggboxplot(alpha, x = 'term', y = 'rooted_pd')
names(alpha)
ggboxplot(alpha, x = 'term', y = 'unrooted_pd')
ggboxplot(alpha, x = 'term', y = 'unrooted_pd') + stat_compare_means()
ggboxplot(alpha, x = 'term', y = 'shannon') + stat_compare_means()
ggboxplot(alpha, x = 'term', y = 'inv_simpson') + stat_compare_means(method = 't.test')
ggboxplot(alpha, x = 'term', y = 'shannon') + stat_compare_means(method = 't.test')
ggboxplot(alpha, x = 'term', y = 'quadratic') + stat_compare_means(method = 't.test')
ggboxplot(alpha, x = 'term', y = 'unrooted_pd') + stat_compare_means(method = 't.test')
ggboxplot(alpha, x = 'term', y = 'rooted_pd') + stat_compare_means(method = 't.test')
ggboxplot(alpha, x = 'term', y = 'shannon') + stat_compare_means(method = 't.test')
ggboxplot(alpha, x = 'term', y = 'phylo_entropy') + stat_compare_means(method = 't.test')
alpha = alpha[which(meta$collect_wk > 30),]
alpha
alpha = read.csv('../../extdata/alpha_diversity/alpha_diversity.csv', header = T)
rownames(alpha) = alpha$specimen; alpha = alpha[,-1]
meta = read.csv('../../extdata/metadata/metadata.csv', header = T)
alpha$id = meta$participant_id
alpha$term = meta$was_term
alpha = alpha[which(meta$collect_wk > 30),]
ggboxplot(alpha, x = 'term', y = 'phylo_entropy') + stat_compare_means(method = 't.test')
names(alpha)
ggboxplot(alpha, x = 'term', y = 'shannon') + stat_compare_means(method = 't.test')
ggboxplot(alpha, x = 'term', y = 'inv_simpson') + stat_compare_means(method = 't.test')
ggboxplot(alpha, x = 'term', y = 'bwpd') + stat_compare_means(method = 't.test')
ggboxplot(alpha, x = 'term', y = 'phylo_entropy') + stat_compare_means(method = 't.test')
ggboxplot(alpha, x = 'term', y = 'quadratic') + stat_compare_means(method = 't.test')
ggboxplot(alpha, x = 'term', y = 'unrooted_pd') + stat_compare_means(method = 't.test')
ggboxplot(alpha, x = 'term', y = 'rooted_pd') + stat_compare_means(method = 't.test')
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
meta = read.csv('../../extdata/metadata/metadata.csv', header = T)
# tax = read.csv('../../extdata/taxonomy/taxonomy_relabd.genus.csv', header = T, row.names = 1)
alpha = read.csv('../../extdata/alpha_diversity/alpha_diversity.csv', header = T)
tax = alpha
require(dplyr)
require(tidyverse)
tax.f = tax %>%
as_tibble() %>%
mutate(participant_id = meta$participant_id) %>%
group_by(participant_id) %>%
summarise_all('mean')
tax.f = as.data.frame(tax.f)
rownames(tax.f) = tax.f[,1]; tax.f = tax.f[,-1]
# Split by project
projID = substr(rownames(tax.f), 1, 1)
projects = unique(projID)
subsets = list()
for (p in seq_along(projects)) {
sub = which(projID == projects[p])
sub = tax.f[sub,]
zeros = colSums(sub == 0) / nrow(sub) * 100
subsets[[p]] = sub[, which(zeros < 90)]
}
names(subsets) = projects
subsets$A
tax$term = meta$was_term
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
meta = read.csv('../../extdata/metadata/metadata.csv', header = T)
# tax = read.csv('../../extdata/taxonomy/taxonomy_relabd.genus.csv', header = T, row.names = 1)
alpha = read.csv('../../extdata/alpha_diversity/alpha_diversity.csv', header = T)
tax = alpha
tax$term = meta$was_term
require(dplyr)
require(tidyverse)
tax.f = tax %>%
as_tibble() %>%
mutate(participant_id = meta$participant_id) %>%
group_by(participant_id) %>%
summarise_all('mean')
tax.f
View(tax.f)
tax.f = tax %>%
as_tibble() %>%
mutate(participant_id = meta$participant_id) %>%
group_by(participant_id) %>%
summarize(across(.cols = where(is.numeric),.fns = mean))
View(tax.f)
tax.f = tax %>%
as_tibble() %>%
mutate(participant_id = meta$participant_id) %>%
group_by(participant_id ~term) %>%
# summarize(across(.cols = where(is.numeric),.fns = mean))
summarise_all('mean')
tax.f = tax %>%
as_tibble() %>%
mutate(participant_id = meta$participant_id) %>%
group_by(participant_id, term) %>%
# summarize(across(.cols = where(is.numeric),.fns = mean))
summarise_all('mean')
View(tax.f)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
meta = read.csv('../../extdata/metadata/metadata.csv', header = T)
# tax = read.csv('../../extdata/taxonomy/taxonomy_relabd.genus.csv', header = T, row.names = 1)
alpha = read.csv('../../extdata/alpha_diversity/alpha_diversity.csv', header = T)
tax = alpha
tax$term = meta$was_term
require(dplyr)
require(tidyverse)
tax.f = tax %>%
as_tibble() %>%
mutate(participant_id = meta$participant_id) %>%
group_by(participant_id, term) %>%
summarise_all('mean')
tax.f = as.data.frame(tax.f)
rownames(tax.f) = tax.f[,1]; tax.f = tax.f[,-1]
# Split by project
projID = substr(rownames(tax.f), 1, 1)
projects = unique(projID)
subsets = list()
for (p in seq_along(projects)) {
sub = which(projID == projects[p])
sub = tax.f[sub,]
zeros = colSums(sub == 0) / nrow(sub) * 100
subsets[[p]] = sub[, which(zeros < 90)]
}
names(subsets) = projects
features = lapply(subsets, function(x) names(x))
features
ggboxplot(subsets$A, x = 'term', y = 'rooted_pd') + stat_compare_means(method = 't.test')
names(alpha)
ggboxplot(subsets$A,
x = 'term',
y = 'shannon') +
stat_compare_means(method = 't.test')
ggboxplot(subsets$A,
x = 'term',
y = 'inv_simpson') +
stat_compare_means(method = 't.test')
ggboxplot(subsets$A,
x = 'term',
y = 'bwpd') +
stat_compare_means(method = 't.test')
ggboxplot(subsets$A,
x = 'term',
y = 'phylo_entropy') +
stat_compare_means(method = 't.test')
ggboxplot(subsets$A,
x = 'term',
y = 'quadratic') +
stat_compare_means(method = 't.test')
names(alpha)
ggboxplot(subsets$A,
x = 'term',
y = 'unrooted_pd') +
stat_compare_means(method = 't.test')
ggboxplot(subsets$B,
x = 'term',
y = 'unrooted_pd') +
stat_compare_means(method = 't.test')
ggboxplot(subsets$B,
x = 'term',
y = 'shannon') +
stat_compare_means(method = 't.test')
ggboxplot(subsets$B,
x = 'term',
y = 'inv_simpson') +
stat_compare_means(method = 't.test')
names(alpha)
ggboxplot(subsets$B,
x = 'term',
y = 'phylo_entropy') +
stat_compare_means(method = 't.test')
ggboxplot(subsets$B,
x = 'term',
y = 'quadratic') +
stat_compare_means(method = 't.test')
ggboxplot(subsets$G,
x = 'term',
y = 'quadratic') +
stat_compare_means(method = 't.test')
ggboxplot(subsets$G,
x = 'term',
y = 'shannon') +
stat_compare_means(method = 't.test')
names(alpha)
ggboxplot(subsets$G,
x = 'term',
y = 'inv_simpson') +
stat_compare_means(method = 't.test')
ggboxplot(subsets$A,
x = 'term',
y = 'inv_simpson') +
stat_compare_means(method = 't.test')
ggboxplot(subsets$A,
x = 'term',
y = 'shannon') +
stat_compare_means(method = 't.test')
ggboxplot(subsets$B,
x = 'term',
y = 'shannon') +
stat_compare_means(method = 't.test')
ggboxplot(subsets$E,
x = 'term',
y = 'shannon') +
stat_compare_means(method = 't.test')
